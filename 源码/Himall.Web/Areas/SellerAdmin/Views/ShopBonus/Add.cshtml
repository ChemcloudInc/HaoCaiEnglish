@model Himall.Web.Areas.SellerAdmin.Models.ShopBonusModel
<script src="~/Scripts/jquery.himallUpload.js"></script>
<link rel="stylesheet" type="text/css" href="~/Content/bootstrap-datetimepicker.min.css">
<script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.js"></script>
<script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.zh-CN.js"></script>
<style>
    input[type="radio"] {
        margin-top: 9px;
    }

    .w50 {
        width: 50px;
    }
</style>

<div class="container">
    <ul class="nav nav-tabs-custom clearfix">
        <strong>Shop Bonus</strong>
        <li><a href="/SellerAdmin/ShopBonus/Management">Management</a></li>
        <li class="active"><a>Add bonus</a></li>
        <li><a href="@Url.Action("BuyService")">Buy service</a></li>
    </ul>

    @using( Html.BeginForm( "Add" , "ShopBonus" , new { Area = "SellerAdmin" } , FormMethod.Post , new { id = "BonusForm" , @class = "form-horizontal" } ) )
    {
        <div class="form-group">
            <label for="" class="col-sm-2 control-label"></label>
            <div class="col-sm-10">
                <p class="help-default">说明：随机红包为商家提供类似滴滴打车红包、饿了么红包等可在微信中传播营销工具，可极大提高店铺的二次曝光率</p>
            </div>
        </div><br />

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Activity name:</label>
            <div class="col-sm-3">
                @Html.TextBoxFor( p => p.Name , new { @class = "form-control input-sm" , @maxlength = "20" } )
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Num of red packets:</label>
            <div class="col-sm-3">
                @Html.TextBoxFor( p => p.Count , new { @class = "form-control input-sm" , @onkeypress = "return (/[\\d.]/.test(String.fromCharCode(event.keyCode)))" } )
            </div>
            <div class="col-sm-6">
                <p class="help-default">Num of red packets that member can get if he share the packes.</p>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Random range:</label>
            <div class="col-sm-3">
                @Html.TextBoxFor( p => p.RandomAmountStart , new { @class = "w50" , @onkeypress = "return (/[\\d.]/.test(String.fromCharCode(event.keyCode)))" } ) to
                @Html.TextBoxFor( p => p.RandomAmountEnd , new { @class = "w50" , @onkeypress = "return (/[\\d.]/.test(String.fromCharCode(event.keyCode)))" } ) dollars
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Conditions:</label>
            <div class="col-sm-3">
                @Html.RadioButtonFor( p => p.UseState , ( int )Himall.Model.ShopBonusInfo.UseStateType.FilledSend , new { @name = "UseState" , @id = "rdi1" , @Checked = "checked" } )
                <label for="rdi1">Up to </label>
                @Html.TextBoxFor( p => p.UsrStatePrice , new { @class = "w50" , @onkeypress = "return (/[\\d.]/.test(String.fromCharCode(event.keyCode)))" } ) <br />
                @Html.RadioButtonFor( p => p.UseState , ( int )Himall.Model.ShopBonusInfo.UseStateType.None , new { @name = "UseState" , @id = "rdi2" } )
                <label for="rdi1">Unlimited</label>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Release method:</label>
            <div class="col-sm-3">
                <label for="rdi1">Shopping up to</label>
                @Html.TextBoxFor( p => p.GrantPrice , new { @class = "w50" , @onkeypress = "return (/[\\d.]/.test(String.fromCharCode(event.keyCode)))" } ) dollars
            </div>
            <div class="col-sm-6">
                <p class="help-default">Red packet can be obtained if order amount reaches the set value. </p>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Start time:</label>
            <div class="col-sm-3">
                @Html.TextBoxFor( p => p.DateStart , new { @class = "form-control input-sm start_datetime" } )
				<i class="glyphicon glyphicon-calendar"></i>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">End time:</label>
            <div class="col-sm-3">
                @Html.TextBoxFor( p => p.DateEnd , new { @class = "form-control input-sm end_datetime" } )
				<i class="glyphicon glyphicon-calendar"></i>
            </div>
            <div class="col-sm-5">
                <p class="help-default">Red packets only can be recived during activity time</p>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Expiry date:</label>
			<!--<label for="rdi1">至</label>-->
			<div class="col-sm-5">
                <div class="row">
                    <div class="col-sm-6">
						@Html.TextBoxFor( p => p.BonusDateStart , new { @class = "form-control input-sm start_datetime" } )
                        <i class="glyphicon glyphicon-calendar"></i>
                    </div>
                    <div class="col-sm-6">
						@Html.TextBoxFor( p => p.BonusDateEnd , new { @class = "form-control input-sm end_datetime" } )
                        <i class="glyphicon glyphicon-calendar"></i>
                    </div>

                </div>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Share title:</label>
            <div class="col-sm-3">
                @Html.TextBoxFor( p => p.ShareTitle , new { @class = "form-control input-sm" , @maxlength = "20" } )
            </div>
            <div class="col-sm-6">
                <p class="help-default">Name of the link that red packets are shared.</p>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Share detail:</label>
            <div class="col-sm-3">
                @Html.TextAreaFor( p => p.ShareDetail , new { @class = "form-control input-sm" , @maxlength = "60" } )
            </div>
            <div class="col-sm-6">
                <p class="help-default">Details of the link that red packets are shared.</p>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Share icon:</label>
            <div class="col-sm-3">
                <div id="upload-img" class="form-group upload-img"></div>
            </div>
            <div class="col-sm-5">
                <p class="help-default">Icon of the link that the activity is shared.</p>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Simultaneously released to:</label>
            <div class="col-sm-3">
                @Html.CheckBoxFor( p => p.SynchronizeCard , new { @class = "input-sm" , @checked="true" } )
                <label for="rdi1">WXCard</label>
            </div>
            <div class="col-sm-6">
                <p class="help-default">@*如您的微信公众号没有开通卡券权限，将由平台公众号代发券。同步至微信卡包后，需等待微信审核通过，才能领取；*@</p>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">WXCard colors:</label>
            <div class="col-sm-3">
                <select name="CardColor" id="CardColor" class="form-control input-sm">
                    @foreach( System.Collections.DictionaryEntry item in Himall.Model.WXCardLogInfo.WXCardColors )
                    {
                        <option value="@(item.Key)" style="background:@(item.Value);color:#fff;">@(item.Key)</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">WXCard title:</label>
            <div class="col-sm-3">
                @Html.TextBoxFor( p => p.CardTitle , new { @class = "form-control input-sm" , @maxlength = "30" } )
            </div>
            <div class="col-sm-6">
                <p class="help-default">You can describe the specific benefits the WXCard can provide.</p>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Subtitle(not reqired):</label>
            <div class="col-sm-3">
                @Html.TextBoxFor( p => p.CardSubtitle , new { @class = "form-control input-sm" , @maxlength = "18" } )
            </div>
            <div class="col-sm-6">
                <p class="help-default">Can not be more than 18 words</p>
            </div>
        </div>


        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Each person can receive:</label>
            <div class="col-sm-3">
                <label for="rdi1">one time</label>
            </div>
        </div>

        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Range of use:</label>
            <div class="col-sm-3">
                <label for="rdi1">General used in all shops</label>
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="button" id="subCate" class="btn btn-primary">Save</button>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    $( function ()
    {

        $( "#subCate" ).click( function ()
        {
            var loading = showLoading();
            $( this ).attr( 'disabled', "true" );
            if ( check() )
            {
                $.post( "/SellerAdmin/ShopBonus/IsOverDate", { bend: $( "#BonusDateEnd" ).val(), end: $( "#DateEnd" ).val() }, function ( data )
                {
                    loading.close();
                    if ( data )
                    {
                        $( "#subCate" ).removeAttr( "disabled" );
                        $.dialog.tips('End date can not exceed the date of buying service!');
                    }
                    else
                    {
                        document.getElementById( "BonusForm" ).submit();
                    }
                } );
            }
            else
            {
                loading.close();
                $( "#subCate" ).removeAttr( "disabled" );
            }
            
        } );

        $( 'input:checkbox' ).click( function ()
        {
            if ( $( '#SynchronizeCard' ).is( ':checked' ) )
            {
                $( "#CardColor" ).removeAttr( "disabled" );
                $( "#CardTitle" ).removeAttr( "disabled" );
                $( "#CardSubtitle" ).removeAttr( "disabled" );
            }
            else
            {
                $( "#CardColor" ).attr( "disabled", "true" );
                $( "#CardTitle" ).attr( "disabled", "true" );
                $( "#CardSubtitle" ).attr( "disabled", "true" );
            }
        } )

        $( "#upload-img" ).himallUpload( {
            title: '',
            imageDescript: '',
            imgFieldName: "ShareImg",
            dataWidth: 10
        } );

        $( ".start_datetime" ).datetimepicker( {
            language: 'zh-CN',
            format: 'yyyy-mm-dd',
            autoclose: true,
            weekStart: 1,
            minView: 2
        } );
        $( ".end_datetime" ).datetimepicker( {
            language: 'zh-CN',
            format: 'yyyy-mm-dd',
            autoclose: true,
            weekStart: 1,
            minView: 2
        } );

        $( '#DateStart' ).on( 'changeDate', function ()
        {
            if ( $( "#DateEnd" ).val() )
            {
                if ( $( "#DateStart" ).val() > $( "#DateEnd" ).val() )
                {
                    $( '#DateEnd' ).val( $( "#DateStart" ).val() );
                }
            }

            $( '#DateEnd' ).datetimepicker( 'setStartDate', $( "#DateStart" ).val() );
        } );

        $( '#BonusDateStart' ).on( 'changeDate', function ()
        {
            if ( $( "#BonusDateEnd" ).val() )
            {
                if ( $( "#BonusDateStart" ).val() > $( "#BonusDateEnd" ).val() )
                {
                    $( '#BonusDateEnd' ).val( $( "#BonusDateStart" ).val() );
                }
            }

            $( '#BonusDateEnd' ).datetimepicker( 'setStartDate', $( "#BonusDateStart" ).val() );
        } );


    } )

    function check()
    {
        var end = $.trim( $( "#DateEnd" ).val() );
        var bend = $.trim( $( "#BonusDateEnd" ).val() );
        end = end.replace( /-/g, "/" );
        bend = bend.replace( /-/g, "/" );
        var date = new Date( end );
        var bdate = new Date( bend );

        if ( date > bdate )
        {
            $.dialog.tips('End time must be less than the end day of period of validity!');
            return false;
        }

        if ( $.trim( $( "#Name" ).val() ) == "" )
        {
            $.dialog.tips('Activity Name can not be empty!');
            return false;
        }
        var count = $.trim( $( "#Count" ).val() ); 
        if ( count == "" || parseInt(count) <= 0 )
        {
            $.dialog.tips('The number of red packet must be greater than 0!');
            return false;
        }

        var r_start = $.trim( $( "#RandomAmountStart" ).val() );
        var r_end = $.trim( $( "#RandomAmountEnd" ).val() );
        if ( r_start == "" || r_end == "" || parseFloat( r_start ) <= 0 || parseFloat( r_end ) <= 0 || isNaN(r_start) || isNaN(r_end) )
        {
            $.dialog.tips('Random amount can not be less than zero!');
            return false;
        }
        if ( parseFloat( r_start ) > parseFloat( r_end ) )
        {
            $.dialog.tips( 'The range of random amount is error!' );
            return false;
        }

        if ( $( 'input[name="UseState"]:checked ' ).val() == "2" )
        {
            var ustateprice = $.trim( $( "#UsrStatePrice" ).val() );
            if ( isNaN(ustateprice) || ustateprice == "" || parseFloat( ustateprice ) <= 0 )
            {
                $.dialog.tips('Conditions must be greater than 0!');
                return false;
            }
        }

        var grantpricr = $.trim( $( "#GrantPrice" ).val() );
        if ( grantpricr == "" || parseFloat( grantpricr ) < 0 )
        {
            $.dialog.tips('Issuance conditions can not be less than zero!');
            return false;
        }

        if ( $.trim( $( "#DateStart" ).val() ) == '' )
        {
            $.dialog.tips( 'Start time is requried!' );
            return false;
        }
        if ( $.trim( $( "#DateEnd" ).val() ) == '' )
        {
            $.dialog.tips( 'End time is required!' );
            return false;
        }
        if ( $.trim( $( "#BonusDateStart" ).val() ) == '' )
        {
            $.dialog.tips('Period of validity is required!');
            return false;
        }

        if ( $.trim( $( "#ShareTitle" ).val() ) == '' )
        {
            $.dialog.tips( 'Share title is required!' );
            return false;
        }
        if ( $.trim( $( "#ShareDetail" ).val() ) == '' )
        {
            $.dialog.tips( 'Share detail is required!' );
            return false;
        }

        if ( $.trim( $( "input[name=ShareImg]" ).val() ) == '' )
        {
            $.dialog.tips('Please upload the picture!');
            return false;
        }

        if ( $( '#SynchronizeCard' ).is( ':checked' ) )
        {
            if ( $.trim( $( "#CardColor" ).val() ) == '' )
            {
                $.dialog.tips('Please select card color!');
                return false;
            }

            if ( $.trim( $( "#CardTitle" ).val() ) == '' )
            {
                $.dialog.tips( 'Card title is required!' );
                return false;
            }
        }
        return true;
    }
</script>